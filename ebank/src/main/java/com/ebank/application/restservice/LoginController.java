package com.ebank.application.restservice;

import com.ebank.application.EncodeDecodeEncryptDecrypt;
import com.ebank.application.managedata.User;
import com.ebank.application.managedata.UserRepository;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.criteria.CriteriaBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.text.ParseException;
import java.util.List;

@Controller
@RequestMapping(path="/Connexion")
public class LoginController {
    @Autowired // This means to get the bean called operationRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/SignIn")
    public @ResponseBody String signIn(@RequestParam String nomUtilisateur , @RequestParam String password) throws ParseException {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        String userName    = EncodeDecodeEncryptDecrypt.decryptAndDecodeData(nomUtilisateur);

        String userPassword = EncodeDecodeEncryptDecrypt.decryptAndDecodeData(password);

        User currentUser = userRepository.findByNomUtilisateur(userName);

        if (currentUser != null) {
            if (currentUser.getPassword().equals(userPassword)) {
                // Je veux pas renvoyer le mot de passe car pas besoin et permet d'être plus sécurisé
                currentUser.setPassword("");
            } else {
                currentUser.setIduser(0);
            }
        }

        String JSONUser = JsonConverter.UserToJSON(currentUser);
        // Comme j'envoi des infos en lien avec des logins je crypte
        String EncryptUser = EncodeDecodeEncryptDecrypt.encryptAndEncodeData(JSONUser);

        return EncryptUser;
    }

}
